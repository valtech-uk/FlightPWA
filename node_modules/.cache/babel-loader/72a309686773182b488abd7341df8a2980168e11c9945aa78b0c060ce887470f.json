{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brandon.murphy\\\\source\\\\repos\\\\FlightPWA\\\\src\\\\LandingPage.tsx\";\nimport React from 'react';\nimport logo from './logo.svg';\nimport blueSkyImage from './blueskies.jpg';\nimport * as webauthn from '@passwordless-id/webauthn';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst webAuthn = new webauthn({\n  registerUrl: '/register',\n  // URL for registration endpoint\n  loginUrl: '/login' // URL for login endpoint\n});\n\nconst handleRegisterClick = () => {\n  webAuthn.register().then(registrationOptions => {\n    // Send `registrationOptions` to the server for registration\n    // You'll need to implement this part to communicate with your server\n  }).catch(error => {\n    // Handle any errors\n  });\n};\nconst handleLoginClick = () => {\n  webAuthn.login().then(authenticationOptions => {\n    // Send `authenticationOptions` to the server for authentication\n    // You'll need to implement this part to communicate with your server\n  }).catch(error => {\n    // Handle any errors\n  });\n};\nconst LandingPage = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"landing-page\",\n    style: {\n      backgroundImage: `url(${blueSkyImage})`\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: logo,\n      alt: \"easyJet Logo\",\n      className: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"register-btn\",\n        onClick: handleRegisterClick,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"login-btn\",\n        onClick: handleRegisterClick,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_c = LandingPage;\nexport default LandingPage;\nvar _c;\n$RefreshReg$(_c, \"LandingPage\");","map":{"version":3,"names":["React","logo","blueSkyImage","webauthn","jsxDEV","_jsxDEV","webAuthn","registerUrl","loginUrl","handleRegisterClick","register","then","registrationOptions","catch","error","handleLoginClick","login","authenticationOptions","LandingPage","className","style","backgroundImage","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/brandon.murphy/source/repos/FlightPWA/src/LandingPage.tsx"],"sourcesContent":["import React from 'react';\r\nimport logo from './logo.svg';\r\nimport blueSkyImage from './blueskies.jpg';\r\nimport * as webauthn from '@passwordless-id/webauthn';\r\n\r\nconst webAuthn = new webauthn({\r\n    registerUrl: '/register', // URL for registration endpoint\r\n    loginUrl: '/login',       // URL for login endpoint\r\n});\r\n\r\nconst handleRegisterClick = () => {\r\n    webAuthn.register()\r\n        .then((registrationOptions) => {\r\n            // Send `registrationOptions` to the server for registration\r\n            // You'll need to implement this part to communicate with your server\r\n        })\r\n        .catch((error) => {\r\n            // Handle any errors\r\n        });\r\n};\r\n\r\nconst handleLoginClick = () => {\r\n    webAuthn.login()\r\n        .then((authenticationOptions) => {\r\n            // Send `authenticationOptions` to the server for authentication\r\n            // You'll need to implement this part to communicate with your server\r\n        })\r\n        .catch((error) => {\r\n            // Handle any errors\r\n        });\r\n};\r\n\r\n\r\n\r\n\r\nconst LandingPage: React.FC = () => {\r\n    return (\r\n        <div className=\"landing-page\" style={{ backgroundImage: `url(${blueSkyImage})` }}>\r\n            <img src={logo} alt=\"easyJet Logo\" className=\"logo\" />\r\n            <div className=\"button-container\"> {/* Add container for buttons */}\r\n                <button className=\"register-btn\" onClick={handleRegisterClick}>Register</button>\r\n                <button className=\"login-btn\" onClick={handleRegisterClick}>Login</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LandingPage;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,YAAY,MAAM,iBAAiB;AAC1C,OAAO,KAAKC,QAAQ,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,QAAQ,GAAG,IAAIH,QAAQ,CAAC;EAC1BI,WAAW,EAAE,WAAW;EAAE;EAC1BC,QAAQ,EAAE,QAAQ,CAAQ;AAC9B,CAAC,CAAC;;AAEF,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAC9BH,QAAQ,CAACI,QAAQ,CAAC,CAAC,CACdC,IAAI,CAAEC,mBAAmB,IAAK;IAC3B;IACA;EAAA,CACH,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;IACd;EAAA,CACH,CAAC;AACV,CAAC;AAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAC3BT,QAAQ,CAACU,KAAK,CAAC,CAAC,CACXL,IAAI,CAAEM,qBAAqB,IAAK;IAC7B;IACA;EAAA,CACH,CAAC,CACDJ,KAAK,CAAEC,KAAK,IAAK;IACd;EAAA,CACH,CAAC;AACV,CAAC;AAKD,MAAMI,WAAqB,GAAGA,CAAA,KAAM;EAChC,oBACIb,OAAA;IAAKc,SAAS,EAAC,cAAc;IAACC,KAAK,EAAE;MAAEC,eAAe,EAAG,OAAMnB,YAAa;IAAG,CAAE;IAAAoB,QAAA,gBAC7EjB,OAAA;MAAKkB,GAAG,EAAEtB,IAAK;MAACuB,GAAG,EAAC,cAAc;MAACL,SAAS,EAAC;IAAM;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtDvB,OAAA;MAAKc,SAAS,EAAC,kBAAkB;MAAAG,QAAA,GAAC,GAAC,eAC/BjB,OAAA;QAAQc,SAAS,EAAC,cAAc;QAACU,OAAO,EAAEpB,mBAAoB;QAAAa,QAAA,EAAC;MAAQ;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAChFvB,OAAA;QAAQc,SAAS,EAAC,WAAW;QAACU,OAAO,EAAEpB,mBAAoB;QAAAa,QAAA,EAAC;MAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACE,EAAA,GAVIZ,WAAqB;AAY3B,eAAeA,WAAW;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}